// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

 /**
  * Register
  * 16-bit register:
  * If load[t] == 1 then out[t+1] = in[t]
  * else out does not change
  * IN in[16], load;
  * OUT out[16];
  */

  /**
   * Inc16
   * 16-bit incrementer:
   * out = in + 1 (arithmetic addition)
   * IN in[16];
   * OUT out[16];
   */

CHIP PC {
    IN in[16], load, inc, reset;
    OUT out[16];

    PARTS:
    // Put your code here:
    // If reset = 1 then out[t+1] = 0
    Mux16(a=outA, b=outAPlusOne, sel=inc, out=o1); // increments the last output from the register or not
    Mux16(a = o1, b = in, sel = load, out = o2); // loads the input if load=1 else uses register output from last timestep
    Mux16(a = o2, b = false, sel = reset, out = o3); // resets if reset=1

    // always take what was fed in before 
    Register(in=o3, load=true, out=outA, out=out);

    // else if inc = 1 then out[t+1] = out[t] + 1
    Inc16(in=outA, out=outAPlusOne);


}
